import { Client, InvokeResult, Job, MaybeAsync, Uri } from "../types";
export interface JobRunOptions<TUri extends Uri | string = string> {
    relativeId: string;
    parentId: string;
    jobs: Job<TUri>;
}
export declare class JobRunner<TData extends unknown = unknown, TUri extends Uri | string = string> {
    private client;
    private onExecution?;
    private jobOutput;
    constructor(client: Client, onExecution?: ((id: string, data?: InvokeResult<TData>["data"], error?: InvokeResult<TData>["error"]) => MaybeAsync<void>) | undefined);
    run(opts: JobRunOptions<TUri>): Promise<void>;
    resolveInput(absCurStepId: string, input: Record<string, unknown>): Record<string, unknown>;
}
