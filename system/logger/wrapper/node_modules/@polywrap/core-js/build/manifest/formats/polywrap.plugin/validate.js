"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.validatePluginManifest = void 0;
var Validators = __importStar(require("../../validators"));
var _0_0_1_prealpha_1_json_1 = __importDefault(require("@polywrap/manifest-schemas/formats/polywrap.plugin/0.0.1-prealpha.1.json"));
var _0_0_1_prealpha_2_json_1 = __importDefault(require("@polywrap/manifest-schemas/formats/polywrap.plugin/0.0.1-prealpha.2.json"));
var _0_0_1_prealpha_3_json_1 = __importDefault(require("@polywrap/manifest-schemas/formats/polywrap.plugin/0.0.1-prealpha.3.json"));
var tracing_js_1 = require("@polywrap/tracing-js");
var jsonschema_1 = require("jsonschema");
var schemas = {
    "0.0.1-prealpha.1": _0_0_1_prealpha_1_json_1.default,
    "0.0.1-prealpha.2": _0_0_1_prealpha_2_json_1.default,
    "0.0.1-prealpha.3": _0_0_1_prealpha_3_json_1.default,
};
var validator = new jsonschema_1.Validator();
jsonschema_1.Validator.prototype.customFormats.pluginLanguage = Validators.pluginLanguage;
jsonschema_1.Validator.prototype.customFormats.file = Validators.file;
jsonschema_1.Validator.prototype.customFormats.packageName = Validators.packageName;
jsonschema_1.Validator.prototype.customFormats.graphqlFile = Validators.graphqlFile;
exports.validatePluginManifest = tracing_js_1.Tracer.traceFunc("core: validatePluginManifest", function (manifest, extSchema) {
    if (extSchema === void 0) { extSchema = undefined; }
    var schema = schemas[manifest.format];
    if (!schema) {
        throw Error("Unrecognized PluginManifest schema format \"" + manifest.format + "\"\nmanifest: " + JSON.stringify(manifest, null, 2));
    }
    var throwIfErrors = function (result) {
        if (result.errors.length) {
            throw new Error(__spread([
                "Validation errors encountered while sanitizing PluginManifest format " + manifest.format
            ], result.errors.map(function (error) { return error.toString(); })).join("\n"));
        }
    };
    throwIfErrors(validator.validate(manifest, schema));
    if (extSchema) {
        throwIfErrors(validator.validate(manifest, extSchema));
    }
});
//# sourceMappingURL=validate.js.map