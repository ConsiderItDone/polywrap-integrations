import { Uri, InvokeResult } from "../";
export interface MaybeUriOrManifest {
    uri?: string;
    manifest?: string;
}
export declare const Query: {
    tryResolveUri: (invoke: <TData = unknown, TUri extends string | Uri = string>(options: import("..").InvokeOptions<TUri, import("..").ClientConfig<string>>) => Promise<InvokeResult<TData>>, wrapper: Uri, uri: Uri) => Promise<InvokeResult<MaybeUriOrManifest>>;
    getFile: (invoke: <TData = unknown, TUri extends string | Uri = string>(options: import("..").InvokeOptions<TUri, import("..").ClientConfig<string>>) => Promise<InvokeResult<TData>>, wrapper: Uri, path: string) => Promise<InvokeResult<ArrayBuffer>>;
};
