import { DeserializeManifestOptions } from "../../../manifest";
import { Uri, WrapperCache, Client } from "../../../types";
import { UriResolver, UriResolutionStack, UriResolutionResult } from "../../core";
import { CreateWrapperFunc } from "./types/CreateWrapperFunc";
export declare class UriResolverWrapper implements UriResolver {
    readonly implementationUri: Uri;
    private readonly createWrapper;
    private readonly deserializeOptions?;
    constructor(implementationUri: Uri, createWrapper: CreateWrapperFunc, deserializeOptions?: DeserializeManifestOptions | undefined);
    get name(): string;
    resolveUri(uri: Uri, client: Client, cache: WrapperCache, resolutionPath: UriResolutionStack): Promise<UriResolutionResult>;
}
