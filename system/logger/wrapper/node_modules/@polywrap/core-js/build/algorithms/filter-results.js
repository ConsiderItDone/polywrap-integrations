"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.filterResults = void 0;
var tracing_js_1 = require("@polywrap/tracing-js");
/* eslint-disable @typescript-eslint/no-explicit-any */
exports.filterResults = tracing_js_1.Tracer.traceFunc("core: filterResults", function (result, filter) {
    var e_1, _a;
    if (!result) {
        return result;
    }
    if (typeof result !== "object") {
        throw Error("The result given is not an object. " +
            "Filters can only be given on results that are of 'object' type.\n" +
            ("Filter: " + JSON.stringify(filter, null, 2)));
    }
    var filtered = {};
    var res = result;
    try {
        for (var _b = __values(Object.keys(filter)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (res[key] !== undefined) {
                if (typeof filter[key] === "boolean") {
                    filtered[key] = res[key];
                }
                else {
                    filtered[key] = exports.filterResults(res[key], filter[key]);
                }
            }
            else {
                filtered[key] = undefined;
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return filtered;
});
//# sourceMappingURL=filter-results.js.map