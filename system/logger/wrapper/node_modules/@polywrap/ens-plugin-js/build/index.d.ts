import { Client, Module, Input_tryResolveUri, Input_getFile, UriResolver_MaybeUriOrManifest, Bytes } from "./wrap";
import { PluginFactory } from "@polywrap/core-js";
export declare type Address = string;
export interface Addresses {
    [network: string]: Address;
}
export interface EnsPluginConfig extends Record<string, unknown> {
    addresses?: Addresses;
}
export declare class EnsPlugin extends Module<EnsPluginConfig> {
    static defaultAddress: string;
    constructor(config: EnsPluginConfig);
    tryResolveUri(input: Input_tryResolveUri, client: Client): Promise<UriResolver_MaybeUriOrManifest | null>;
    getFile(_input: Input_getFile, _client: Client): Bytes | null;
    ensToCID(domain: string, client: Client): Promise<string>;
    private _setAddresses;
}
export declare const ensPlugin: PluginFactory<EnsPluginConfig>;
export declare const plugin: PluginFactory<EnsPluginConfig>;
