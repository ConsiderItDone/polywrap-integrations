"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WasmWrapper = void 0;
var imports_1 = require("./imports");
var core_js_1 = require("@polywrap/core-js");
var tracing_js_1 = require("@polywrap/tracing-js");
var asyncify_js_1 = require("@polywrap/asyncify-js");
var hasExport = function (name, exports) {
    if (!exports[name]) {
        return false;
    }
    return true;
};
var WasmWrapper = /** @class */ (function (_super) {
    __extends(WasmWrapper, _super);
    function WasmWrapper(_uri, _manifest, _uriResolver, _clientEnv) {
        var _this = _super.call(this) || this;
        _this._uri = _uri;
        _this._manifest = _manifest;
        _this._uriResolver = _uriResolver;
        _this._clientEnv = _clientEnv;
        _this._wasm = undefined;
        _this._sanitizedEnv = undefined;
        tracing_js_1.Tracer.startSpan("WasmWrapper: constructor");
        tracing_js_1.Tracer.setAttribute("input", {
            uri: _this._uri,
            manifest: _this._manifest,
            clientEnv: _this._clientEnv,
            uriResolver: _this._uriResolver,
        });
        tracing_js_1.Tracer.endSpan();
        return _this;
    }
    WasmWrapper.prototype.getManifest = function (options, client) {
        return __awaiter(this, void 0, void 0, function () {
            var manifest, fileTitle, manifestExts, manifestExts_1, manifestExts_1_1, ext, path, error_1, e_1_1;
            var e_1, _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!(options === null || options === void 0 ? void 0 : options.type)) {
                            return [2 /*return*/, this._manifest];
                        }
                        fileTitle = options.type === "polywrap" ? "polywrap" : "polywrap." + options.type;
                        manifestExts = ["json", "yaml", "yml"];
                        _b.label = 1;
                    case 1:
                        _b.trys.push([1, 8, 9, 10]);
                        manifestExts_1 = __values(manifestExts), manifestExts_1_1 = manifestExts_1.next();
                        _b.label = 2;
                    case 2:
                        if (!!manifestExts_1_1.done) return [3 /*break*/, 7];
                        ext = manifestExts_1_1.value;
                        path = fileTitle + "." + ext;
                        _b.label = 3;
                    case 3:
                        _b.trys.push([3, 5, , 6]);
                        return [4 /*yield*/, this.getFile({ path: path, encoding: "utf8" }, client)];
                    case 4:
                        manifest = (_b.sent());
                        return [3 /*break*/, 7];
                    case 5:
                        error_1 = _b.sent();
                        return [3 /*break*/, 6];
                    case 6:
                        manifestExts_1_1 = manifestExts_1.next();
                        return [3 /*break*/, 2];
                    case 7: return [3 /*break*/, 10];
                    case 8:
                        e_1_1 = _b.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 10];
                    case 9:
                        try {
                            if (manifestExts_1_1 && !manifestExts_1_1.done && (_a = manifestExts_1.return)) _a.call(manifestExts_1);
                        }
                        finally { if (e_1) throw e_1.error; }
                        return [7 /*endfinally*/];
                    case 10:
                        if (!manifest) {
                            throw new Error("WasmWrapper: Manifest was not found.");
                        }
                        switch (options.type) {
                            case "build":
                                return [2 /*return*/, core_js_1.deserializeBuildManifest(manifest)];
                            case "meta":
                                return [2 /*return*/, core_js_1.deserializeMetaManifest(manifest)];
                            default:
                                return [2 /*return*/, core_js_1.deserializePolywrapManifest(manifest)];
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    WasmWrapper.prototype.getFile = function (options, client) {
        return __awaiter(this, void 0, void 0, function () {
            var path, encoding, _a, data, error, decoder, text;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        path = options.path, encoding = options.encoding;
                        return [4 /*yield*/, core_js_1.UriResolverInterface.Query.getFile(function (options) { return client.invoke(options); }, 
                            // TODO: support all types of URI resolvers (cache, etc)
                            new core_js_1.Uri(this._uriResolver), core_js_1.combinePaths(this._uri.path, path))];
                    case 1:
                        _a = _b.sent(), data = _a.data, error = _a.error;
                        if (error) {
                            throw error;
                        }
                        // If nothing is returned, the file was not found
                        if (!data) {
                            throw Error("WasmWrapper: File was not found.\nURI: " + this._uri + "\nSubpath: " + path);
                        }
                        if (encoding) {
                            decoder = new TextDecoder(encoding);
                            text = decoder.decode(data);
                            if (!text) {
                                throw Error("WasmWrapper: Decoding the file's bytes array failed.\nBytes: " + data);
                            }
                            return [2 /*return*/, text];
                        }
                        return [2 /*return*/, data];
                }
            });
        });
    };
    WasmWrapper.prototype.invoke = function (options, client) {
        return __awaiter(this, void 0, void 0, function () {
            var method_1, noDecode, input_1, wasm, state, abort, memory, instance, exports_1, result, invokeResult, error_2;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 5, , 6]);
                        method_1 = options.method, noDecode = options.noDecode;
                        input_1 = options.input || {};
                        return [4 /*yield*/, this._getWasmModule(client)];
                    case 1:
                        wasm = _a.sent();
                        state = {
                            invoke: {},
                            subinvoke: {
                                args: [],
                            },
                            subinvokeImplementation: {
                                args: [],
                            },
                            invokeResult: {},
                            method: method_1,
                            sanitizeEnv: {},
                            args: input_1 instanceof ArrayBuffer ? input_1 : core_js_1.msgpackEncode(input_1),
                        };
                        abort = function (message) {
                            throw new Error("WasmWrapper: Wasm module aborted execution.\nURI: " + _this._uri.uri + "\n" +
                                ("Method: " + method_1 + "\n") +
                                ("Input: " + JSON.stringify(input_1, null, 2) + "\nMessage: " + message + ".\n"));
                        };
                        memory = asyncify_js_1.AsyncWasmInstance.createMemory({ module: wasm });
                        return [4 /*yield*/, asyncify_js_1.AsyncWasmInstance.createInstance({
                                module: wasm,
                                imports: imports_1.createImports({
                                    state: state,
                                    client: client,
                                    memory: memory,
                                    abort: abort,
                                }),
                                requiredExports: WasmWrapper.requiredExports,
                            })];
                    case 2:
                        instance = _a.sent();
                        exports_1 = instance.exports;
                        return [4 /*yield*/, this._sanitizeAndLoadEnv(state, exports_1)];
                    case 3:
                        _a.sent();
                        return [4 /*yield*/, exports_1._wrap_invoke(state.method.length, state.args.byteLength)];
                    case 4:
                        result = _a.sent();
                        invokeResult = this._processInvokeResult(state, result, abort);
                        switch (invokeResult.type) {
                            case "InvokeError": {
                                throw Error("WasmWrapper: invocation exception encountered.\n" +
                                    ("uri: " + this._uri.uri + "\n") +
                                    ("method: " + method_1 + "\n") +
                                    ("input: " + JSON.stringify(input_1, null, 2) + "\n") +
                                    ("exception: " + invokeResult.invokeError));
                            }
                            case "InvokeResult": {
                                if (noDecode) {
                                    return [2 /*return*/, {
                                            data: invokeResult.invokeResult,
                                        }];
                                }
                                try {
                                    return [2 /*return*/, {
                                            data: core_js_1.msgpackDecode(invokeResult.invokeResult),
                                        }];
                                }
                                catch (err) {
                                    throw Error("WasmWrapper: Failed to decode query result.\nResult: " + JSON.stringify(invokeResult.invokeResult) + "\nError: " + err);
                                }
                            }
                            default: {
                                throw Error("WasmWrapper: Unknown state \"" + state + "\"");
                            }
                        }
                        return [3 /*break*/, 6];
                    case 5:
                        error_2 = _a.sent();
                        return [2 /*return*/, {
                                error: error_2,
                            }];
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    WasmWrapper.prototype.getSchema = function (client) {
        return __awaiter(this, void 0, void 0, function () {
            var schema, _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (this._schema) {
                            return [2 /*return*/, this._schema];
                        }
                        schema = this._manifest.schema;
                        _a = this;
                        return [4 /*yield*/, this.getFile({ path: schema, encoding: "utf8" }, client)];
                    case 1:
                        _a._schema = (_b.sent());
                        return [2 /*return*/, this._schema];
                }
            });
        });
    };
    WasmWrapper.prototype._processInvokeResult = function (state, result, abort) {
        if (result) {
            if (!state.invoke.result) {
                abort("Invoke result is missing.");
            }
            return {
                type: "InvokeResult",
                invokeResult: state.invoke.result,
            };
        }
        else {
            if (!state.invoke.error) {
                abort("Invoke error is missing.");
            }
            return {
                type: "InvokeError",
                invokeError: state.invoke.error,
            };
        }
    };
    WasmWrapper.prototype._sanitizeAndLoadEnv = function (state, exports) {
        return __awaiter(this, void 0, void 0, function () {
            var clientEnv;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!hasExport("_wrap_load_env", exports)) return [3 /*break*/, 6];
                        if (!(this._sanitizedEnv !== undefined)) return [3 /*break*/, 1];
                        state.env = this._sanitizedEnv;
                        return [3 /*break*/, 4];
                    case 1:
                        clientEnv = this._getClientEnv();
                        if (!hasExport("_wrap_sanitize_env", exports)) return [3 /*break*/, 3];
                        state.sanitizeEnv.args = core_js_1.msgpackEncode({ env: clientEnv });
                        return [4 /*yield*/, exports._wrap_sanitize_env(state.sanitizeEnv.args.byteLength)];
                    case 2:
                        _a.sent();
                        state.env = state.sanitizeEnv.result;
                        this._sanitizedEnv = state.env;
                        return [3 /*break*/, 4];
                    case 3:
                        state.env = core_js_1.msgpackEncode(clientEnv);
                        this._sanitizedEnv = state.env;
                        _a.label = 4;
                    case 4: return [4 /*yield*/, exports._wrap_load_env(state.env.byteLength)];
                    case 5:
                        _a.sent();
                        _a.label = 6;
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    WasmWrapper.prototype._getClientEnv = function () {
        var _a;
        if (!((_a = this._clientEnv) === null || _a === void 0 ? void 0 : _a.env)) {
            return {};
        }
        return this._clientEnv.env;
    };
    WasmWrapper.prototype._getWasmModule = function (client) {
        return __awaiter(this, void 0, void 0, function () {
            var moduleManifest, data;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (this._wasm !== undefined) {
                            return [2 /*return*/, this._wasm];
                        }
                        moduleManifest = this._manifest.module;
                        if (!moduleManifest) {
                            throw Error("Package manifest does not contain a definition for module");
                        }
                        return [4 /*yield*/, this.getFile({ path: moduleManifest }, client)];
                    case 1:
                        data = (_a.sent());
                        this._wasm = data;
                        return [2 /*return*/, data];
                }
            });
        });
    };
    WasmWrapper.requiredExports = ["_wrap_invoke"];
    __decorate([
        tracing_js_1.Tracer.traceMethod("WasmWrapper: getManifest")
    ], WasmWrapper.prototype, "getManifest", null);
    __decorate([
        tracing_js_1.Tracer.traceMethod("WasmWrapper: getFile")
    ], WasmWrapper.prototype, "getFile", null);
    __decorate([
        tracing_js_1.Tracer.traceMethod("WasmWrapper: invoke")
    ], WasmWrapper.prototype, "invoke", null);
    __decorate([
        tracing_js_1.Tracer.traceMethod("WasmWrapper: getSchema")
    ], WasmWrapper.prototype, "getSchema", null);
    __decorate([
        tracing_js_1.Tracer.traceMethod("WasmWrapper: _processInvokeResult")
    ], WasmWrapper.prototype, "_processInvokeResult", null);
    __decorate([
        tracing_js_1.Tracer.traceMethod("WasmWrapper: _sanitizeAndLoadEnv")
    ], WasmWrapper.prototype, "_sanitizeAndLoadEnv", null);
    __decorate([
        tracing_js_1.Tracer.traceMethod("WasmWrapper: _getClientEnv")
    ], WasmWrapper.prototype, "_getClientEnv", null);
    __decorate([
        tracing_js_1.Tracer.traceMethod("WasmWrapper: getWasmModule")
    ], WasmWrapper.prototype, "_getWasmModule", null);
    return WasmWrapper;
}(core_js_1.Wrapper));
exports.WasmWrapper = WasmWrapper;
//# sourceMappingURL=WasmWrapper.js.map